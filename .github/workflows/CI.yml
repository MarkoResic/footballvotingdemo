name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

jobs: 
  build-java:
   
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout files    
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Login to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.MY_ACCESS_TOKEN }}
          password: ${{ secrets.MY_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: registry.digitalocean.com/footballvotingdemo/app:latest
        
  deploy:
    needs: build-java
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout files    
        uses: actions/checkout@v4
        
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{secrets.SSH_HOST}} # IP address of the server you wish to ssh into
          key: ${{secrets.DIGITALOCEAN_SSH_KEY}} # Private or public key of the server
          username: ${{ secrets.SSH_USERNAME }} # User of the server you want to ssh into

          script: |
            # Login to registry
            docker login -u ${{ secrets.MY_ACCESS_TOKEN }} -p ${{ secrets.MY_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop all containers
            docker stop $(docker ps -aq) && docker rm $(docker ps -aq)
            # Run a new container from a new image
            docker run -d -p 8080:8080 registry.digitalocean.com/footballvotingdemo/app:latest
